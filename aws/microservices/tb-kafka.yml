#
# Copyright Â© 2016-2020 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#This is an optional deployment file. You can deploy Kafka inside EKS instead of AWS MSK
#To use internal kafka deploy this file and set the TB_KAFKA_SERVERS: "tb-kafka:9092" in the tb-kafka-configmap.yml file
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tb-kafka
  namespace: thingsboard
spec:
  serviceName: "tb-kafka"
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: tb-kafka
  template:
    metadata:
      labels:
        app: tb-kafka
    spec:
      nodeSelector:
        role: tb-node
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - tb-kafka
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 799
        runAsNonRoot: true
        fsGroup: 799
      containers:
        - name: server
          imagePullPolicy: Always
          image: bitnami/kafka:4.0.0
          ports:
            - containerPort: 9092
              name: client
            - containerPort: 9093
              name: controller
          startupProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 15
            successThreshold: 1
            tcpSocket:
              port: "controller"
          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            exec:
              command:
                - pgrep
                - -f
                - kafka
          readinessProbe:
            initialDelaySeconds: 15
            failureThreshold: 10
            timeoutSeconds: 5
            periodSeconds: 15
            successThreshold: 1
            tcpSocket:
              port: "controller"
          env:
            - name: KAFKA_CLUSTER_ID
              value: "A0SZ6TGET1mhlQYl49uBSQ"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@tb-kafka-0.tb-kafka.thingsboard.svc.cluster.local:9093,1@tb-kafka-1.tb-kafka.thingsboard.svc.cluster.local:9093,2@tb-kafka-2.tb-kafka.thingsboard.svc.cluster.local:9093"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
              value: "2"
            - name: KAFKA_CFG_LOG_RETENTION_BYTES
              value: "1073741824"
            - name: KAFKA_CFG_SEGMENT_BYTES
              value: "26214400"
            - name: KAFKA_CFG_LOG_RETENTION_MS
              value: "300000"
            - name: KAFKA_CFG_LOG_CLEANUP_POLICY
              value: "delete"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_OPTS
              value: "-Xms1G -Xmx1G -XX:+AlwaysPreTouch"
            - name: KAFKA_LOG_DIRS
              value: "/kafka-data/logs"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller,broker"
            - name: KAFKA_NODE_ID_COMMAND
              value: "hostname | cut -d'-' -f3"
          resources:
            requests:
              cpu: "300m"
              memory: 1500Mi
            limits:
              cpu: "2000m"
              memory: 1500Mi
          volumeMounts:
            - name: data-logs
              mountPath: /kafka-data
              readOnly: false
            - name: app-logs
              mountPath: /opt/bitnami/kafka/logs
              readOnly: false
  volumeClaimTemplates:
    - metadata:
        name: data-logs
        namespace: thingsboard
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 25000Mi
    - metadata:
        name: app-logs
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1000Mi
---
apiVersion: v1
kind: Service
metadata:
  name: tb-kafka
  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: tb-kafka
  ports:
    - port: 9092
      name: client
    - port: 9093
      name: controller