apiVersion: v1
kind: ConfigMap
metadata:
  name: pgpool
  namespace: thingsboard
data:
  pgpool.conf: |+

    #------------------------------------------------------------------------------
    # CONNECTION POOLING
    #------------------------------------------------------------------------------

    connection_cache = on
                                       # Activate connection pools
                                       # (change requires restart)

                                       # Semicolon separated list of queries
                                       # to be issued at the end of a session
                                       # The default is for 8.3 and later
    reset_query_list = 'ABORT; DISCARD ALL'
                                       # The following one is for 8.2 and before
    #reset_query_list = 'ABORT; RESET ALL; SET SESSION AUTHORIZATION DEFAULT'


    #------------------------------------------------------------------------------
    # REPLICATION MODE
    #------------------------------------------------------------------------------

    replication_mode = off
                                       # Activate replication mode
                                       # (change requires restart)
    replicate_select = off
                                       # Replicate SELECT statements
                                       # when in replication mode
                                       # replicate_select is higher priority than
                                       # load_balance_mode.

    insert_lock = off
                                       # Automatically locks a dummy row or a table
                                       # with INSERT statements to keep SERIAL data
                                       # consistency
                                       # Without SERIAL, no lock will be issued
    lobj_lock_table = ''
                                       # When rewriting lo_creat command in
                                       # replication mode, specify table name to
                                       # lock

    # - Degenerate handling -

    replication_stop_on_mismatch = off
                                       # On disagreement with the packet kind
                                       # sent from backend, degenerate the node
                                       # which is most likely "minority"
                                       # If off, just force to exit this session

    failover_if_affected_tuples_mismatch = off
                                       # On disagreement with the number of affected
                                       # tuples in UPDATE/DELETE queries, then
                                       # degenerate the node which is most likely
                                       # "minority".
                                       # If off, just abort the transaction to
                                       # keep the consistency


    #------------------------------------------------------------------------------
    # LOAD BALANCING MODE
    #------------------------------------------------------------------------------

    load_balance_mode = off
                                       # Activate load balancing mode
                                       # (change requires restart)
    ignore_leading_white_space = on
                                       # Ignore leading white spaces of each query
    white_function_list = ''
                                       # Comma separated list of function names
                                       # that don't write to database
                                       # Regexp are accepted
    black_function_list = 'currval,lastval,nextval,setval'
                                       # Comma separated list of function names
                                       # that write to database
                                       # Regexp are accepted

    black_query_pattern_list = ''
                                       # Semicolon separated list of query patterns
                                       # that should be sent to primary node
                                       # Regexp are accepted
                                       # valid for streaming replicaton mode only.

    database_redirect_preference_list = ''
                                       # comma separated list of pairs of database and node id.
                                       # example: postgres:primary,mydb[0-4]:1,mydb[5-9]:2'
                                       # valid for streaming replicaton mode only.

    app_name_redirect_preference_list = ''
                                       # comma separated list of pairs of app name and node id.
                                       # example: 'psql:primary,myapp[0-4]:1,myapp[5-9]:standby'
                                       # valid for streaming replicaton mode only.
    allow_sql_comments = off
                                       # if on, ignore SQL comments when judging if load balance or
                                       # query cache is possible.
                                       # If off, SQL comments effectively prevent the judgment
                                       # (pre 3.4 behavior).

    disable_load_balance_on_write = 'transaction'
                                       # Load balance behavior when write query is issued
                                       # in an explicit transaction.
                                       # Note that any query not in an explicit transaction
                                       # is not affected by the parameter.
                                       # 'transaction' (the default): if a write query is issued,
                                       # subsequent read queries will not be load balanced
                                       # until the transaction ends.
                                       # 'trans_transaction': if a write query is issued,
                                       # subsequent read queries in an explicit transaction
                                       # will not be load balanced until the session ends.
                                       # 'always': if a write query is issued, read queries will
                                       # not be load balanced until the session ends.

    statement_level_load_balance = off
                                       # Enables statement level load balancing

    #------------------------------------------------------------------------------
    # MASTER/SLAVE MODE
    #------------------------------------------------------------------------------

    master_slave_mode = on
                                       # Activate master/slave mode
                                       # (change requires restart)
    master_slave_sub_mode = 'stream'
                                       # Master/slave sub mode
                                       # Valid values are combinations stream, slony
                                       # or logical. Default is stream.
                                       # (change requires restart)

    # - Watchdog consensus settings for failover -

    failover_when_quorum_exists = on
                                        # Only perform backend node failover
                                        # when the watchdog cluster holds the quorum
                                        # (change requires restart)


    failover_require_consensus = on
                                        # Perform failover when majority of Pgpool-II nodes
                                        # aggrees on the backend node status change
                                        # (change requires restart)

    allow_multiple_failover_requests_from_node = off
                                        # A Pgpool-II node can cast multiple votes
                                        # for building the consensus on failover
                                        # (change requires restart)


    enable_consensus_with_half_votes = off
                                        # apply majority rule for consensus and quorum computation
                                        # at 50% of votes in a cluster with even number of nodes.
                                        # when enabled the existence of quorum and consensus
                                        # on failover is resolved after receiving half of the
                                        # total votes in the cluster, otherwise both these
                                        # decisions require at least one more vote than
                                        # half of the total votes.
                                        # (change requires restart)


---