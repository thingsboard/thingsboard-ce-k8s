#
# Copyright Â© 2016-2020 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-node-config
  labels:
    name: '{{ .Release.Name }}-node-config'
    {{- include "thingsboard.labels" . | nindent 4 }}
data:
  conf: |
      export JAVA_OPTS="$JAVA_OPTS -Dplatform=deb -Dinstall.data_dir=/usr/share/thingsboard/data"
      export JAVA_OPTS="$JAVA_OPTS -Xlog:gc*,heap*,age*,safepoint=debug:file=/var/log/thingsboard/${TB_SERVICE_ID}-gc.log:time,uptime,level,tags:filecount=10,filesize=10M"
      export JAVA_OPTS="$JAVA_OPTS -XX:+IgnoreUnrecognizedVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/thingsboard/${TB_SERVICE_ID}-heapdump.bin"
      export JAVA_OPTS="$JAVA_OPTS -XX:-UseBiasedLocking -XX:+UseTLAB -XX:+ResizeTLAB -XX:+PerfDisableSharedMem -XX:+UseCondCardMark"
      export JAVA_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:MaxTenuringThreshold=10"
      export JAVA_OPTS="$JAVA_OPTS -XX:+ExitOnOutOfMemoryError"
      export LOG_FILENAME=thingsboard.out
      export LOADER_PATH=/usr/share/thingsboard/conf,/usr/share/thingsboard/extensions
  logback: |
      <!DOCTYPE configuration>
      <configuration scan="true" scanPeriod="10 seconds">

          <appender name="fileLogAppender"
                    class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>/var/log/thingsboard/${TB_SERVICE_ID}/thingsboard.log</file>
              <rollingPolicy
                      class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                  <fileNamePattern>/var/log/thingsboard/${TB_SERVICE_ID}/thingsboard.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                  <maxFileSize>100MB</maxFileSize>
                  <maxHistory>30</maxHistory>
                  <totalSizeCap>3GB</totalSizeCap>
              </rollingPolicy>
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
          </appender>

          <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
{{- if .Values.node.jsonLogs }}
              <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
                  <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
                      <timestampFormat>yyyy-MM-dd'T'HH:mm:ss.SSSX</timestampFormat>
                      <timestampFormatTimezoneId>Etc/UTC</timestampFormatTimezoneId>
                      <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                          <prettyPrint>false</prettyPrint>
                      </jsonFormatter>
                      <appendLineSeparator>true</appendLineSeparator>
                  </layout>
              </encoder>
{{ else }}
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
{{- end }}
          </appender>

          <logger name="org.thingsboard.server" level="INFO" />
          <logger name="com.google.common.util.concurrent.AggregateFuture" level="OFF" />
          <logger name="org.apache.kafka.common.utils.AppInfoParser" level="WARN"/>
          <logger name="org.apache.kafka.clients" level="WARN"/>

          <root level="INFO">
              <appender-ref ref="fileLogAppender"/>
              <appender-ref ref="STDOUT"/>
          </root>

      </configuration>
